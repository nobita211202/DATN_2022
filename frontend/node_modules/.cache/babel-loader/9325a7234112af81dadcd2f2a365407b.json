{"remainingRequest":"C:\\Users\\tho.lv\\Desktop\\Oauth0\\DATN_2022\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\tho.lv\\Desktop\\Oauth0\\DATN_2022\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\tho.lv\\Desktop\\Oauth0\\DATN_2022\\frontend\\src\\router\\index.js","dependencies":[{"path":"C:\\Users\\tho.lv\\Desktop\\Oauth0\\DATN_2022\\frontend\\src\\router\\index.js","mtime":1670294674467},{"path":"C:\\Users\\tho.lv\\Desktop\\Oauth0\\DATN_2022\\frontend\\babel.config.js","mtime":1670294673677},{"path":"C:\\Users\\tho.lv\\Desktop\\Oauth0\\DATN_2022\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670297177879},{"path":"C:\\Users\\tho.lv\\Desktop\\Oauth0\\DATN_2022\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1670297177813},{"path":"C:\\Users\\tho.lv\\Desktop\\Oauth0\\DATN_2022\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1670297184228}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Vue","VueRouter","VueMeta","NProgress","store","routes","use","keyName","router","mode","scrollBehavior","to","from","savedPosition","x","y","beforeEach","routeTo","routeFrom","next","name","start","authRequired","matched","some","route","meta","getters","dispatch","then","validUser","redirectToLogin","query","redirectFrom","fullPath","beforeResolve","Promise","resolve","reject","args","length","done","Error","afterEach"],"sources":["C:/Users/tho.lv/Desktop/Oauth0/DATN_2022/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n// https://github.com/declandewet/vue-meta\r\nimport VueMeta from 'vue-meta'\r\n// Adds a loading bar at the top during page loads.\r\nimport NProgress from 'nprogress/nprogress'\r\nimport store from '@state/store'\r\nimport routes from './routes'\r\n\r\nVue.use(VueRouter)\r\nVue.use(VueMeta, {\r\n  // The component option name that vue-meta looks for meta info on.\r\n  keyName: 'page',\r\n})\r\n\r\nconst router = new VueRouter({\r\n  routes,\r\n  // Use the HTML5 history API (i.e. normal-looking routes)\r\n  // instead of routes with hashes (e.g. example.com/#/about).\r\n  // This may require some server configuration in production:\r\n  // https://router.vuejs.org/en/essentials/history-mode.html#example-server-configurations\r\n  mode: 'history',\r\n  // Simulate native-like scroll behavior when navigating to a new\r\n  // route and using back/forward buttons.\r\n  scrollBehavior(to, from, savedPosition) {\r\n    if (savedPosition) {\r\n      return savedPosition\r\n    } else {\r\n      return { x: 0, y: 0 }\r\n    }\r\n  },\r\n})\r\n\r\n// Before each route evaluates...\r\nrouter.beforeEach((routeTo, routeFrom, next) => {\r\n  // If this isn't an initial page load...\r\n  if (routeFrom.name !== null) {\r\n    // Start the route progress bar.\r\n    NProgress.start()\r\n  }\r\n\r\n  // Check if auth is required on this route\r\n  // (including nested routes).\r\n  const authRequired = routeTo.matched.some((route) => route.meta.authRequired)\r\n\r\n  // If auth isn't required for the route, just continue.\r\n  if (!authRequired) return next()\r\n\r\n  // If auth is required and the user is logged in...\r\n  if (store.getters['auth/loggedIn']) {\r\n    // Validate the local user token...\r\n    return store.dispatch('auth/validate').then((validUser) => {\r\n      // Then continue if the token still represents a valid user,\r\n      // otherwise redirect to login.\r\n      validUser ? next() : redirectToLogin()\r\n    })\r\n  }\r\n\r\n  // If auth is required and the user is NOT currently logged in,\r\n  // redirect to login.\r\n  redirectToLogin()\r\n\r\n  function redirectToLogin() {\r\n    // Pass the original route to the login component\r\n    next({ name: 'login', query: { redirectFrom: routeTo.fullPath } })\r\n  }\r\n})\r\n\r\nrouter.beforeResolve(async (routeTo, routeFrom, next) => {\r\n  // Create a `beforeResolve` hook, which fires whenever\r\n  // `beforeRouteEnter` and `beforeRouteUpdate` would. This\r\n  // allows us to ensure data is fetched even when params change,\r\n  // but the resolved route does not. We put it in `meta` to\r\n  // indicate that it's a hook we created, rather than part of\r\n  // Vue Router (yet?).\r\n  try {\r\n    // For each matched route...\r\n    for (const route of routeTo.matched) {\r\n      await new Promise((resolve, reject) => {\r\n        // If a `beforeResolve` hook is defined, call it with\r\n        // the same arguments as the `beforeEnter` hook.\r\n        if (route.meta && route.meta.beforeResolve) {\r\n          route.meta.beforeResolve(routeTo, routeFrom, (...args) => {\r\n            // If the user chose to redirect...\r\n            if (args.length) {\r\n              // If redirecting to the same route we're coming from...\r\n              if (routeFrom.name === args[0].name) {\r\n                // Complete the animation of the route progress bar.\r\n                NProgress.done()\r\n              }\r\n              // Complete the redirect.\r\n              next(...args)\r\n              reject(new Error('Redirected'))\r\n            } else {\r\n              resolve()\r\n            }\r\n          })\r\n        } else {\r\n          // Otherwise, continue resolving the route.\r\n          resolve()\r\n        }\r\n      })\r\n    }\r\n    // If a `beforeResolve` hook chose to redirect, just return.\r\n  } catch (error) {\r\n    return\r\n  }\r\n\r\n  // If we reach this point, continue resolving the route.\r\n  next()\r\n})\r\n\r\n// When each route is finished evaluating...\r\nrouter.afterEach((routeTo, routeFrom) => {\r\n  // Complete the animation of the route progress bar.\r\n  NProgress.done()\r\n})\r\n\r\nexport default router\r\n"],"mappings":"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"}]}